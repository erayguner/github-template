# Example Terraform variables file
# Copy this to terraform.tfvars and customize for your project

# =============================================================================
# PROJECT CONFIGURATION
# =============================================================================

project_name = "my-awesome-project"
environment  = "dev"

# =============================================================================
# CLOUD PROVIDER SELECTION
# =============================================================================

# Choose your cloud provider strategy:
# Option 1: AWS Only
cloud_provider = "aws"
enable_aws     = true
enable_gcp     = false

# Option 2: GCP Only
# cloud_provider = "gcp"
# enable_aws     = false
# enable_gcp     = true

# Option 3: Multi-Cloud (AWS + GCP)
# cloud_provider = "multi"
# enable_aws     = true
# enable_gcp     = true

# =============================================================================
# AWS CONFIGURATION (when enable_aws = true)
# =============================================================================

aws_region = "us-west-2"

# Alternative AWS regions:
# aws_region = "us-east-1"      # US East (N. Virginia)
# aws_region = "us-east-2"      # US East (Ohio)
# aws_region = "eu-west-1"      # Europe (Ireland)
# aws_region = "eu-central-1"   # Europe (Frankfurt)
# aws_region = "ap-southeast-1" # Asia Pacific (Singapore)

# =============================================================================
# GCP CONFIGURATION (when enable_gcp = true)
# =============================================================================

gcp_project_id = "my-gcp-project-id"
gcp_region     = "us-central1"
gcp_zone       = "us-central1-a"

# Alternative GCP regions:
# gcp_region = "us-east1"       # South Carolina
# gcp_region = "us-west1"       # Oregon
# gcp_region = "europe-west1"   # Belgium
# gcp_region = "europe-west4"   # Netherlands
# gcp_region = "asia-east1"     # Taiwan

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

vpc_cidr = "10.0.0.0/16"

# Alternative CIDR blocks:
# vpc_cidr = "172.16.0.0/16"  # RFC 1918 private range
# vpc_cidr = "192.168.0.0/16" # RFC 1918 private range

# =============================================================================
# RESOURCE CONFIGURATION
# =============================================================================

# AWS Instance Types
instance_type = "t3.micro"

# Alternative AWS instance types:
# instance_type = "t3.small"   # 2 vCPU, 2 GB RAM
# instance_type = "t3.medium"  # 2 vCPU, 4 GB RAM
# instance_type = "m5.large"   # 2 vCPU, 8 GB RAM

# Monitoring and Backup
enable_monitoring      = true
backup_retention_days  = 7

# =============================================================================
# ADDITIONAL TAGS/LABELS
# =============================================================================

tags = {
  Owner       = "DevOps Team"
  CostCenter  = "Engineering"
  Purpose     = "Development"
  Terraform   = "true"
}

# =============================================================================
# EXAMPLES FOR DIFFERENT DEPLOYMENT SCENARIOS
# =============================================================================

# Example 1: Development Environment (AWS)
# project_name   = "myapp-dev"
# environment    = "dev"
# cloud_provider = "aws"
# enable_aws     = true
# enable_gcp     = false
# aws_region     = "us-west-2"
# instance_type  = "t3.micro"

# Example 2: Production Environment (GCP)
# project_name   = "myapp-prod"
# environment    = "prod"
# cloud_provider = "gcp"
# enable_aws     = false
# enable_gcp     = true
# gcp_project_id = "my-production-project"
# gcp_region     = "us-central1"

# Example 3: Multi-Cloud Setup
# project_name   = "myapp-multi"
# environment    = "staging"
# cloud_provider = "multi"
# enable_aws     = true
# enable_gcp     = true
# aws_region     = "us-west-2"
# gcp_project_id = "my-staging-project"
# gcp_region     = "us-central1"