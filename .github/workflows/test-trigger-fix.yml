name: Test Auto-Fix Trigger

on:
  workflow_dispatch:
    inputs:
      test_scenario:
        description: 'Test scenario to run'
        required: true
        default: 'ci_failure'
        type: choice
        options:
          - 'ci_failure'
          - 'pr_trigger' 
          - 'manual_trigger'
          - 'check_suite_failure'

permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: read

jobs:
  simulate-ci-failure:
    name: Simulate CI Failure
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'ci_failure'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Introduce test issues
        run: |
          # Create a file with syntax errors to trigger auto-fix
          cat > test_trigger_file.py << 'EOF'
          def broken_function()  # Missing colon
              return "This will fail"
          
          # Bad formatting
          x=1;y=2;z=x+y
          EOF
          
          git config --local user.email "test@example.com"
          git config --local user.name "Test Bot"
          git add test_trigger_file.py
          git commit -m "test: add broken file to trigger CI failure"
          git push
      
      - name: Intentionally fail this workflow
        run: |
          echo "Simulating CI failure..."
          exit 1

  test-auto-fix-trigger:
    name: Test Auto-Fix Trigger Logic
    runs-on: ubuntu-latest
    
    steps:
      - name: Test trigger conditions
        run: |
          echo "## 🧪 Testing Auto-Fix Trigger Scenarios" >> $GITHUB_STEP_SUMMARY
          
          # Test 1: Workflow run failure
          echo "### Test 1: Workflow Run Failure Detection" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Should trigger on CI failure" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Should extract PR number from workflow_run" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Should use correct head SHA" >> $GITHUB_STEP_SUMMARY
          
          # Test 2: Check suite failure
          echo "### Test 2: Check Suite Failure Detection" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Should trigger on check_suite failure" >> $GITHUB_STEP_SUMMARY
          echo "- ❌ Should NOT trigger on check_suite success" >> $GITHUB_STEP_SUMMARY
          
          # Test 3: Manual trigger
          echo "### Test 3: Manual Trigger" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Should always run on workflow_dispatch" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Should accept custom PR number" >> $GITHUB_STEP_SUMMARY
          
          # Test 4: Loop prevention
          echo "### Test 4: Loop Prevention" >> $GITHUB_STEP_SUMMARY
          echo "- ❌ Should NOT trigger on [auto-fix] commits" >> $GITHUB_STEP_SUMMARY
          
          # Test 5: External status
          echo "### Test 5: External Status Integration" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Should trigger on external CI failure" >> $GITHUB_STEP_SUMMARY
          echo "- ❌ Should NOT trigger on external CI success" >> $GITHUB_STEP_SUMMARY

  validate-improvements:
    name: Validate Workflow Improvements
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Validate workflow improvements
        run: |
          echo "## 📋 Workflow Improvements Validation" >> $GITHUB_STEP_SUMMARY
          
          # Check 1: Multiple trigger types
          if grep -q "workflow_run:\|check_suite:\|status:" .github/workflows/auto-fix.yml; then
            echo "- ✅ Multiple trigger types configured" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Missing trigger types" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check 2: Failure detection logic
          if grep -q "github.event.workflow_run.conclusion.*failure" .github/workflows/auto-fix.yml; then
            echo "- ✅ CI failure detection implemented" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Missing failure detection" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check 3: Context extraction
          if grep -q "check-trigger-conditions" .github/workflows/auto-fix.yml; then
            echo "- ✅ Context extraction job added" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Missing context extraction" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check 4: Enhanced commit messages
          if grep -q "TRIGGER_REASON" .github/workflows/auto-fix.yml; then
            echo "- ✅ Enhanced commit messages implemented" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Missing enhanced commit messages" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check 5: Branch detection
          if grep -q "github.event.workflow_run.head_branch" .github/workflows/auto-fix.yml; then
            echo "- ✅ Smart branch detection added" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Missing branch detection" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Key Improvements:" >> $GITHUB_STEP_SUMMARY
          echo "1. **Intelligent Triggering**: Only runs on actual failures" >> $GITHUB_STEP_SUMMARY
          echo "2. **Multi-Event Support**: workflow_run, check_suite, status, PR" >> $GITHUB_STEP_SUMMARY  
          echo "3. **Context Awareness**: Extracts PR numbers, SHAs, branches" >> $GITHUB_STEP_SUMMARY
          echo "4. **Loop Prevention**: Prevents infinite auto-fix cycles" >> $GITHUB_STEP_SUMMARY
          echo "5. **Enhanced Logging**: Better commit messages and summaries" >> $GITHUB_STEP_SUMMARY