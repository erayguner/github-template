name: Auto Fix CI Failures

on:
  workflow_run:
    workflows: ["Basic CI"]   # Must exactly match your CI workflow name
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  actions: read
  id-token: write

jobs:
  auto-fix:
    # Run only for failed PR runs, avoid loops on our own auto-fix branches
    if: |
      github.event.workflow_run.conclusion == 'failure' &&
      github.event.workflow_run.event == 'pull_request' &&
      !startsWith(github.event.workflow_run.head_branch, 'claude-auto-fix-ci-')
    runs-on: ubuntu-latest

    steps:
      - name: Ensure Claude API key exists
        run: |
          if [ -z "${{ secrets.ANTHROPIC_API_KEY }}" ] && [ -z "${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}" ]; then
            echo "::error::Missing ANTHROPIC_API_KEY (or CLAUDE_CODE_OAUTH_TOKEN). Add it in Settings â†’ Secrets and variables â†’ Actions."
            exit 1
          fi

      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const pr = run.pull_requests && run.pull_requests[0];
            if (!pr) {
              core.setFailed('No PR found on workflow_run payload.');
              return;
            }

            const prNum = pr.number;
            const { data: prData } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNum
            });

            const sameRepo = prData.head.repo.full_name === `${context.repo.owner}/${context.repo.repo}`;
            const headRef  = prData.head.ref;     // PR branch name
            const baseRef  = prData.base.ref;     // base branch, e.g. main

            core.setOutput('number', prNum.toString());
            core.setOutput('same_repo', sameRepo ? 'true' : 'false');
            core.setOutput('head_ref', headRef);
            core.setOutput('base_ref', baseRef);

      - name: Checkout target for fixes
        uses: actions/checkout@v5
        with:
          ref: ${{ steps.pr.outputs.head_ref }}   # Checkout the PR branch
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup git identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name  "github-actions[bot]"

      - name: Decide fix branch
        id: branch
        run: |
          if [ "${{ steps.pr.outputs.same_repo }}" = "true" ]; then
            # We can push directly to the PR branch
            echo "branch=${{ steps.pr.outputs.head_ref }}" >> $GITHUB_OUTPUT
            echo "mode=direct" >> $GITHUB_OUTPUT
          else
            # Fork PR: create a new branch in our repo
            FIX_BRANCH="claude-auto-fix-ci-${{ steps.pr.outputs.head_ref }}-${{ github.run_id }}"
            git checkout -b "$FIX_BRANCH"
            echo "branch=$FIX_BRANCH" >> $GITHUB_OUTPUT
            echo "mode=branch" >> $GITHUB_OUTPUT
          fi

      - name: Collect failing job names (optional)
        id: details
        uses: actions/github-script@v7
        with:
          script: |
            const run_id = context.payload.workflow_run.id;
            const { data: jobs } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id
            });
            const failed = jobs.jobs.filter(j => j.conclusion === 'failure').map(j => j.name);
            core.setOutput('failed', JSON.stringify(failed));

      - name: Ask Claude to fix the CI
        uses: anthropics/claude-code-action@v1
        with:
          prompt: |
            /fix-ci
            Repository: ${{ github.repository }}
            Base Branch: ${{ steps.pr.outputs.base_ref }}
            PR Branch: ${{ steps.pr.outputs.head_ref }}
            Failed Jobs: ${{ steps.details.outputs.failed }}
            Please modify files in-place to fix the CI failures.
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY != '' && secrets.ANTHROPIC_API_KEY || secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          claude_args: "--allowedTools 'Edit,Read,Write,Grep,LS'"

      - name: Commit changes if any
        run: |
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(ci): auto-fix CI failures"
          git push -u origin "${{ steps.branch.outputs.branch }}"

      - name: Comment or open PR
        if: steps.branch.outputs.mode == 'direct'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number('${{ steps.pr.outputs.number }}'),
              body: "ðŸ¤– Auto-fixes have been pushed directly to the PR branch `${{ steps.pr.outputs.head_ref }}`."
            });

      - name: Open PR for fixes (fork case)
        if: steps.branch.outputs.mode == 'branch'
        uses: actions/github-script@v7
        with:
          script: |
            const head = "${{ steps.branch.outputs.branch }}";
            const base = "${{ steps.pr.outputs.base_ref }}";
            // If a PR from this head already exists, don't open another
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${head}`
            });
            if (prs.length) {
              core.info(`PR already exists: ${prs[0].html_url}`);
              return;
            }
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "chore(ci): auto-fix CI failures",
              head,
              base,
              body: "Automated fixes for failing CI."
            });
            core.info(`Opened PR: ${pr.html_url}`);

      - name: Leave note on original PR (fork case)
        if: steps.branch.outputs.mode == 'branch'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number('${{ steps.pr.outputs.number }}'),
              body: "ðŸ¤– Pushed auto-fix branch `${{ steps.branch.outputs.branch }}` and opened a PR toward `${{ steps.pr.outputs.base_ref }}`."
            });
