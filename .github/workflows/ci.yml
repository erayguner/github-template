name: Basic CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  # Linting and code quality
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # -------- Python linting (only if Python present) --------
      - name: Install uv
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', '**/*.py') != ''
        uses: astral-sh/setup-uv@v6
        with:
          version: latest

      - name: Set up Python
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', '**/*.py') != ''
        run: uv python install 3.11

      - name: Create uv virtualenv
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', '**/*.py') != ''
        working-directory: ./python
        run: uv venv --python 3.11

      - name: Python linting
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', '**/*.py') != ''
        working-directory: ./python
        run: |
          if [[ -f "pyproject.toml" ]]; then
            uv sync --group dev || true
          elif [[ -f "requirements.txt" ]]; then
            uv pip install -r requirements.txt || true
          fi
          uv pip install ruff || true
          uv run ruff check .
          uv run ruff format --check .

      # -------- Terraform linting (only if Terraform present) --------
      - name: Setup Terraform
        if: hashFiles('**/*.tf') != ''
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.6.0

      - name: Terraform linting
        if: hashFiles('**/*.tf') != ''
        working-directory: ./terraform
        run: |
          terraform fmt -check -diff -recursive .
          terraform init -backend=false -input=false
          terraform validate -no-color

  # Security checks
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # -------- CodeQL Analysis --------
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: +security-extended

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # -------- Secret scanning --------
      - name: Secret scanning (trufflehog)
        uses: trufflesecurity/trufflehog@v3.85.0
        with:
          path: ./
          base: main
          head: HEAD

      # -------- Python security (Bandit/Safety) --------
      - name: Set up Python for security
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', 'python/**/*.py') != ''
        uses: astral-sh/setup-uv@v6
        with:
          version: latest

      - name: Install Python 3.11
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', 'python/**/*.py') != ''
        run: uv python install 3.11

      - name: Create uv virtualenv (security)
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', 'python/**/*.py') != ''
        working-directory: ./python
        run: uv venv --python 3.11

      - name: Python security check (Bandit & Safety)
        if: hashFiles('python/pyproject.toml', 'python/requirements*.txt', 'python/**/*.py') != ''
        working-directory: ./python
        run: |
          if [[ -f "pyproject.toml" ]]; then uv sync --group dev || true; fi
          uv pip install bandit safety || true
          uv run bandit -r src -f json -o bandit-report.json || true
          uv run safety check --json --output safety-report.json || true

      # -------- Terraform security (tfsec) --------
      - name: Terraform security (tfsec)
        if: hashFiles('**/*.tf') != ''
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          format: sarif
          output: ${{ github.workspace }}/tfsec.sarif  # explicit absolute path

      - name: Upload tfsec SARIF
        if: always() && hashFiles(format('{0}/tfsec.sarif', github.workspace)) != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/tfsec.sarif
          category: "terraform-security"