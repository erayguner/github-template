name: Basic CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  # Linting and code quality
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install uv
        if: hashFiles('**/pyproject.toml', '**/requirements*.txt') != ''
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Set up Python
        if: hashFiles('**/pyproject.toml', '**/requirements*.txt') != ''
        run: uv python install 3.11

      - name: Python linting
        if: hashFiles('**/pyproject.toml', '**/requirements*.txt') != ''
        working-directory: ./python
        run: |
          uv sync --group dev
          uv run ruff check .
          uv run ruff format --check .

      - name: Setup Terraform
        if: hashFiles('**/*.tf') != ''
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.6.0

      - name: Terraform linting
        if: hashFiles('**/*.tf') != ''
        working-directory: ./terraform
        run: |
          terraform fmt -check -recursive .
          terraform init -backend=false
          terraform validate

  # Security checks
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: +security-extended

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"

      - name: Secret scanning
        uses: trufflesecurity/trufflehog@v3.85.0
        with:
          path: ./
          base: main
          head: HEAD

      - name: Python security check
        if: hashFiles('**/pyproject.toml', '**/requirements*.txt') != ''
        run: |
          pip install bandit safety
          bandit -r python/ -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true

      - name: Terraform security check
        if: hashFiles('**/*.tf') != ''
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          format: sarif
          output: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: hashFiles('**/*.tf') != ''
        with:
          sarif_file: tfsec.sarif
          category: "terraform-security"